package com.disuite.test.thoughtspot;

import java.util.Hashtable;

import org.testng.SkipException;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import com.disuite.base.BaseClass;
import com.disuite.pages.thoughtspot.DbdlConnectionMethods;
import com.disuite.util.TestUtil;

public class DbdlDataFlowCreationTest {
	@Test(dataProvider = "getData")
	public void dbdlDfCreationTest(Hashtable<String, String> data) throws InterruptedException {

		// check the run mode of test case
		if (!TestUtil.isExecutable("DatabrickDeltaLake", BaseClass.xls1)) {
			throw new SkipException("Runmode set to NO");
		}

		// check runmode for data set
		if (!data.get("Runmode").equals("Y")) {
			throw new SkipException("Test Case Data Set Runmode is no.");
		}

		DbdlConnectionMethods hm = new DbdlConnectionMethods();
		hm.createDbdlConnection(data.get("ConnectionName"), data.get("SelectValue"), data.get("Serverhostname"),data.get("Port"), 
				data.get("HTTPpath"), data.get("Protocol"), data.get("ClusterId"), data.get("accessToken"),
				data.get("DBFSStageLocation"), data.get("Dbname"), data.get("AddTableSync"), data.get("TsTable"), data.get("ExtractType"), 
				data.get("ExtractionMode"));
	}

	@DataProvider
	public Object[][] getData() {
		return TestUtil.getData("DatabrickDeltaLake", BaseClass.xls1);
	}

	
	
	
	  @AfterMethod 
	  public void tearDown() throws Exception {
	  BaseClass.closeBrowser(); 
	  }
}
