package com.disuite.pages.thoughtspot;

import org.openqa.selenium.By;

import com.disuite.base.BaseClass;
import com.disuite.base.URLNavigations;

public class SalesforceDataFlowCreationMethod extends BaseClass {
	URLNavigations url = new URLNavigations();
	SyncProperties syncp = new SyncProperties();
	DataFlowCreation df = new DataFlowCreation();

	public SalesforceDataFlowCreationMethod tsdfCreation(String ConnectionName, String SelectValue, String Host, String Port,
			String tdAuthenticationType, String prestoAuthenticationType, String Username, String User, String Password,
			String Database, String Version, String catalogName, String schemaName, String jdbcoptions,
			String Config_Version, String FilePath, String FileProtocol, String FileHost, String FilePort,
			String FileUsername, String FilePassword, String Keyfile, String AuthenticationType, String TsTable,
			String Passphrasekey, String DBtype, String Dbname, String AddTableSync, String Account,
			String AzureauthTypeInput, String azureKey, String Container, String syncProperty, String addCondition,
			String syncMode, String synCompletionValue, String moveItPath, String waitForFile, String preSyncQuery,
			String postSyncQuery, String extractionModeInput, String dataloadingModeInput, String syncColumnDelimiter,
			String nullValue, String nullValuedrp, String escapeCharacter, String enclosingCharacterInput,
			String escapeUnclosedField, String fieldOptionallyEnclosedBy, String bufferSize, String dateStyleValue,
			String dateDelimiter, String timeStyleValue, String timeDelimiter, String timeDelimiterValue,
			String booleanRepresentationValue, String skipTrailerRowsValue, String readerEncoderValue, String fetchSize,
			String nullIfValue, String maxFileSize, String parallelValue, String stageLocation,
			String allowLargeResultSet, String readTimeout, String tsLoadOptions, String ExtractType,
			String ExtractionMode)
			throws InterruptedException {
		url.openThoughtSpot();
		df.headerVerification();
		df.clickOnConnections();
		df.addConnection();
		df.enterConnectionDetails(ConnectionName, SelectValue, Host, Port, tdAuthenticationType, prestoAuthenticationType,
				Username, User, Password, Database, Version, catalogName, schemaName, jdbcoptions, Config_Version,
				FilePath, FileProtocol, FileHost, FilePort, FileUsername, FilePassword, Keyfile, AuthenticationType,
				Passphrasekey, Account, AzureauthTypeInput, azureKey, Container);
		pause(2000);
		df.addTableSync();
		df.tableSetup(DBtype, Dbname, AddTableSync);
		df.setUpSync();
		pause(3000);
		df.scheduleDoesNotRepeat();
		df.advancedSetup();
		pause(3000);
		if ((syncProperty != null) && (syncProperty.equals("Yes"))) {
			syncp.tsSyncProperties(SelectValue, addCondition, syncMode, synCompletionValue, moveItPath, waitForFile,
					preSyncQuery, postSyncQuery, extractionModeInput, dataloadingModeInput, syncColumnDelimiter,
					nullValue, nullValuedrp, escapeCharacter, enclosingCharacterInput, escapeUnclosedField,
					fieldOptionallyEnclosedBy, bufferSize, dateStyleValue, dateDelimiter, timeStyleValue, timeDelimiter,
					timeDelimiterValue, booleanRepresentationValue, skipTrailerRowsValue, readerEncoderValue, fetchSize,
					nullIfValue, maxFileSize, parallelValue, stageLocation, allowLargeResultSet, readTimeout,
					tsLoadOptions);
			driver.findElement(By.xpath(OR.getProperty("MAP_TABLES_COLUMNS_TAB"))).click();
		}
		df.mapTableAndColumns(TsTable);
		pause(10000);
		df.clickOnConnections();
		pause(2000);
		df.selectConnection(ConnectionName);
		pause(2000);
		df.clickOnTable();
		Thread.sleep(3000);
		df.selectTable(TsTable);
		df.pageRefresh();
		df.clickOnViewLogIcon();
		df.verifyExtractType(ExtractType);
		df.verifyExtractionMode(ExtractionMode);
		df.loadType();
		df.numberOfRows();
		df.clickOnClose();
		df.tsLogout();
		pause(5000);
		return new SalesforceDataFlowCreationMethod();
	}

}
