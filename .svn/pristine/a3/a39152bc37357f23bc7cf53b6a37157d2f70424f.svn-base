package com.disuite.test.thoughtspot;

import java.util.Hashtable;

import org.testng.SkipException;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import com.disuite.base.BaseClass;
import com.disuite.pages.thoughtspot.DataFlowCreation;
import com.disuite.util.TestUtil;

public class AzureBlobStorageDataFlowCreationTest {
	@Test(dataProvider = "getData")
	public void azureBlobStorageCreationTest(Hashtable<String, String> data) throws InterruptedException {
		
		// check the run mode of test case
				if (!TestUtil.isExecutable("AzureBlobConnection",
						BaseClass.xls1)) {
					throw new SkipException("Runmode set to NO");
				}

		// check runmode for data set
				if (!data.get("Runmode").equals("Y")) {
					throw new SkipException("Test Case Data Set Runmode is no.");
				}

				DataFlowCreation testdf = new DataFlowCreation();
				testdf.tsdfCreation(data.get("ConnectionName"), data.get("SelectValue"), data.get("Host"), data.get("Port"),
						data.get("tdAuthenticationType"), data.get("Username"), data.get("Password"), data.get("Database"),
						data.get("Version"), data.get("jdbcoptions"), data.get("platformValueInput"), data.get("dbAlias"),
						data.get("vesionInput"), data.get("codePageInput"), data.get("Config_Version"), data.get("FilePath"),
						data.get("FileProtocol"), data.get("FileHost"), data.get("FilePort"), data.get("FileUsername"),
						data.get("FilePassword"), data.get("KeyFile"), data.get("AuthenticationType"), data.get("TsTable"),
						data.get("Passphrasekey"), data.get("DBtype"), data.get("Dbname"), data.get("AddTableSync"),
						data.get("Account"), data.get("AzureauthTypeInput"), data.get("azureKey"), data.get("Container"),
						data.get("ExtractType"), data.get("ExtractionMode"));
	}
	
	@DataProvider
	public Object[][] getData() {
		return TestUtil.getData("AzureBlobConnection", BaseClass.xls1);
	}
	
	
	  @AfterMethod 
	  public void tearDown() throws Exception {
	  BaseClass.closeBrowser(); 
	  } 
}
